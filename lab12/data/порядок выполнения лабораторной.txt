1)
mkdir lab12; cd lab12
gedit prog1.sh

#!/bin/bash
lockfile="./lock.file"
exec {fn}>$lockfile
counter=0
while test -f "$lockfile" && [ $counter -lt 5 ]
do
if flock -n ${fn}
then
echo "file is locked"
sleep 3
echo "file is unlocked"
flock -u ${fn}
else
echo "file is locked"
fi
counter=$((counter+1))
done

bash prog1.sh

2)
gedit prog2.sh

#!/bin/bash
a=$1
if test -f "/usr/share/man/man1/$a.1.gz"
then less /usr/share/man/man1/$a.1.gz
else
echo "There is no such command"
fi

bash prog2.sh ls

3)
gedit prog3.sh

#!/bin/bash
a=$1
for ((i=0; i<$a; i++))
do
((char=$RANDOM%26+1))
case $char in
1) echo -n a;; 2) echo -n b;; 3) echo -n c;;
4) echo -n d;; 5) echo -n e;; 6) echo -n f;;
7) echo -n g;; 8) echo -n h;; 9) echo -n i;;
10) echo -n j;; 11) echo -n k;; 12) echo -n l;;
13) echo -n m;; 14) echo -n n;; 15) echo -n o;;
16) echo -n p;; 17) echo -n q;; 18) echo -n r;;
19) echo -n s;; 20) echo -n t;; 21) echo -n u;;
22) echo -n v;; 23) echo -n w;; 24) echo -n x;;
25) echo -n y;; 26) echo -n z;;
esac
done
echo

bash prog3.sh 4
bash prog3.sh 4
bash prog3.sh 10

ВОПРОСЫ:
1)
В данной строчке допущены следующие ошибки: не хватает пробелов после первой скобки [ и перед второй скобкой ] выражение $1 необходимо взять в “”, потому что эта переменная может содержать пробелы Таким образом, правильный вариант должен выглядеть так: while "[ “$1” != “exit” ]".

2)
Чтобы объединить несколько строк в одну, можно воспользоваться несколькими способами: 
Первый: VAR1=“Hello,” VAR2=” World” VAR3=“VAR1VAR2” echo “$VAR3”

Результат: Hello, World

Второй: VAR1=“Hello,” VAR1+=” World” echo “$VAR1”

Результат: Hello, World

3)
Команда seq в Linux используется для генерации чисел от ПЕРВОГО до ПОСЛЕДНЕГО шага INCREMENT. Параметры: seq LAST: если задан только один аргумент, он создает числа от 1 до LAST с шагом шага, равным 1. Если LAST меньше 1, значение is не выдает. seq FIRST LAST: когда заданы два аргумента, он генерирует числа от FIRST до LAST с шагом 1, равным 1. Если LAST меньше FIRST, он не выдает никаких выходных данных. seq FIRST INCREMENT LAST: когда заданы три аргумента, он генерирует числа от FIRST до LAST на шаге INCREMENT. Если LAST меньше, чем FIRST, он не производит вывод. seq -f «FORMAT» FIRST INCREMENT LAST: эта команда используется для генерации последовательности в форматированном виде. FIRST и INCREMENT являются необязательными. seq -s «STRING» ПЕРВЫЙ ВКЛЮЧЕНО: Эта команда используется для STRING для разделения чисел. По умолчанию это значение равно /n. FIRST и INCREMENT являются необязательными. seq -w FIRST INCREMENT LAST: эта команда используется для выравнивания ширины путем заполнения начальными нулями. FIRST и INCREMENT являются необязательными.

4)
Результатом данного выражения $((10/3)) будет 3, потому что это целочисленное деление без остатка.

5)
Отличия командной оболочки zsh от bash: В zsh более быстрое автодополнение для cd с помощью Тab В zsh существует калькулятор zcalc, способный выполнять вычисления внутри терминала В zsh поддерживаются числа с плавающей запятой В zsh поддерживаются структуры данных «хэш» В zsh поддерживается раскрытие полного пути на основе неполных данных В zsh поддерживается замена части пути В zsh есть возможность отображать разделенный экран, такой же как разделенный экран vim.

6)
for ((a=1; a <= LIMIT; a++)) синтаксис данной конструкции верен, потому что, используя двойные круглые скобки, можно не писать $ перед переменными ().

7)
Преимущества и недостатки скриптового языка bash: • Один из самых распространенных и ставится по умолчанию в большинстве дистрибутивах Linux, MacOS • Удобное перенаправление ввода/вывода • Большое количество команд для работы с файловыми системами Linux • Можно писать собственные скрипты, упрощающие работу в Linux Недостат- ки скриптового языка bash: • Дополнительные библиотеки других языков позволяют выполнить больше действий • Bash не является языков общего назначения • Утилиты, при выполнении скрипта, запускают свои процессы, которые, в свою очередь, отражаются на быстроте выполнения этого скрипта • Скрипты, написанные на bash, нельзя запустить на других операционных системах без дополнительных действий.