1)
sudo -i
touch abc1
cp abc1 april
cp abc1 may; ls

mkdir monthly
cp april may monthly; ls

cp monthly/may monthly/june; ls monthly

mkdir monthly.00
cp -r monthly monthly.00

cp -r monthly.00 /tmp; ls /tmp

cd; mv april july

mv july monthly.00; ls monthly.00

mv monthly.00 monthly.01

mkdir reports
mv monthly.01 reports

mv reports/monthly.01 reports/monthly
ls

cd; touch may; ls -l may
chmod u+x may; ls -l may

chmod u-x may; ls -l may

cd; mkdir monthly
chmod g-r, o-r monthly

cd; touch abc1; chmod g+w abc1

mount

cat /etc/fstab

df

fsck /dev/sda1

2.1)
pwd
cp /usr/include/sys/io.h /home/max/equipment
ls

2.2)
mkdir ski.plases
ls | grep "ski"; ls -F | grep "ski"

2.3)
mv equipment ~/ski.plases
ls ski.plases

2.4)
mv ~/ski.plases/equipment ~/ski.plases/equiplist
ls ski.plases

2.5)
touch abc1; ls
cp abc1 ~/ski.plases; ls ski.plases

2.6)
mkdir ~/ski.plases/equipment; ls ski.plases

2.7)
mv ~/ski.plases/equiplist ~/ski.plases/equipment
mv ~/ski.plases/equiplist2 ~/ski.plases/equipment
ls ski.plases; ls ski.plases/equipment/

2.8)
mkdir ~/newdir; ls | grep new
mv newdir ~/ski.plases/plans; ls ski.plases

3)
mkdir australia play my_os feathers
ls -l
chmod 744 australia; chmod 711 play; chmod 544 my_os; chmod 664 feathers
ls -l australia play my_os feathers

4.1)
cat /etc/password; ls /etc

4.2)
cp ~/feathers ~/file.old; ls file.old

4.3)
mv file.old play; ls play

4.4)
cp play fun; ls; cp -r play fun; ls fun

4.5)
mv fun play; ls
cd play; mv fun games; ls

4.6)
chmod u-r feathers; ls -ld feathers

4.7)
cat feathers

4.8)
cp feathers feathers2

4.9)
chmod u+r feathers; ls -ld feathers

4.10)
chmod u-x play

4.11)
cd play

4.12)
chmod u+x play

5)
man mount
man fsck
man mkfs
man kill

вопросы:
1)
findmnt -l

- proc. Файловая система proc является важным источником информации о вашей Linux-системе, который попросту нельзя игнорировать. Вообще, proc является псевдо- или виртуальной файловой системой, которая предоставляет пользователям доступ к внутренним структурам ядра Linux. Другими словами, proc не является реальной файловой системой в обычном смысле; она располагается исключительно в оперативной памяти, а не на диске. При этом она автоматически монтируется системой.
- Sysfs - отправляет данные в пространство пользователя с помощью виртуальных файлов. Эти данные содержат данные о различных подсистемах ядра, аппаратных устройствах и связанных с ними драйверах устройств.
- tmpfs и devtmpfs - они относятся к энергозависимой памяти.
- devpts - обеспечивает доступ к терминалам pseudo (PTY).
- cgroup2 - Неверно ведущий себя процесс может создавать тонны процессов через ветвления, запуская некую бомбу ветвлений и сокрушая своё ядро. Это означает, что нам требуется ввести некий способ контроля ресурсов для процессов в пределах заданного пространства имён. Это достигается через механизм, носящий название групп контроля (control groups), обычно именуемых cgroups. cgroups работают под понятием контроллеров cgroup и представляются в файловой системе с названием cgroupfs в самом ядре Linux. В настоящее время применяется cgroup v2 версия cgroups.
- pstore - был введен в Linux для записи информации (например, dmesg tail) при выключении. Pstore не зависит от kdump и может запускаться до него. В определенных сценариях (например, хосты/гости с корневыми файловыми системами на NFS/iSCSI, где произошел сбой сетевого программного и/или аппаратного обеспечения), pstore может содержать информацию, доступную для посмертной отладки, которая не может быть получена иным образом.
- bpf - это псевдо-файловая система, существующая только в памяти, которая позволяет создавать файлы, ссылающиеся на объекты BPF.
- btrfs - файловая система для Linux, основанная на структурах B-деревьев и работающая по принципу «копирование при записи» (copy-on-write). Опубликована корпорацией Oracle в 2007 году под лицензией GNU General Public License.
- selinux - Как и файловая система /proc, /selinux является псевдофайловой системой. Новая реализация SE Linux использует расширенные атрибуты для хранения контекста безопасности.
- tracefs - файловая система для задач трассировки Linux
- debugfs - DebugFS является самой известной утилитой, предназначенной для работы с файловыми системами EXT2FS и EXT3FS.
- hugetlb - использует страницы большого размера, что позволяет кэшировать больше адресов за раз.
- mqueue - обеспечивает необходимую поддержку ядра для библиотеки пользовательского пространства, которая реализует интерфейсы очереди сообщений POSIX.
- fusectl - это простой интерфейс для программ пользовательского пространства для экспорта виртуальной файловой системы в ядро Linux.
- configf - Виртуальная файловая система, представляющая состояние ядра операционной системы и запущенных процессов в виде файлов.
- ext4 - журналируемая файловая система, используемая преимущественно в операционных системах с ядром Linux, созданная на базе ext3 в 2006 году.
- fuse.gv, fuse.po, fuse.je - FUSE (файловая система в пользовательском пространстве) — это интерфейс для программ пользовательского пространства для экспорта файловой системы в ядро Linux.
2)
Верхний уровень / => root каталог, содержит в себе всю иерархию системы и от него идут все остольные:
```
/bin — здесь находятся двоичные исполняемые файлы. Основные общие команды, хранящиеся отдельно от других программ в системе (прим.: pwd, ls, cat, ps);
/boot — тут расположены файлы, используемые для загрузки системы (образ initrd, ядро vmlinuz);
/dev — в данной директории располагаются файлы устройств (драйверов). С помощью этих файлов можно взаимодействовать с устройствами. К примеру, если это жесткий диск, можно подключить его к файловой системе. В файл принтера же можно написать напрямую и отправить задание на печать;
/etc— в этой директории находятся файлы конфигураций программ. Эти файлы позволяют настраивать системы, сервисы, скрипты системных демонов;
/home — каталог, аналогичный каталогу Users в Windows. Содержит домашние каталоги учетных записей пользователей (кроме root). При создании нового пользователя здесь создается одноименный каталог с аналогичным именем и хранит личные файлы этого пользователя;
/lib — содержит системные библиотеки, с которыми работают программы и модули ядра;
/lost+found — содержит файлы, восстановленные после сбоя работы системы. Система проведет проверку после сбоя и найденные файлы можно будет посмотреть в данном каталоге;
/media — точка монтирования внешних носителей. Например, когда вы вставляете диск в дисковод, он будет автоматически смонтирован в директорию /media/cdrom;
/mnt — точка временного монтирования. Файловые системы подключаемых устройств обычно монтируются в этот каталог для временного использования;
/opt — тут расположены дополнительные (необязательные) приложения. Такие программы обычно не подчиняются принятой иерархии и хранят свои файлы в одном подкаталоге (бинарные, библиотеки, конфигурации);
/proc — содержит файлы, хранящие информацию о запущенных процессах и о состоянии ядра ОС;
/root — директория, которая содержит файлы и личные настройки суперпользователя;
/run — содержит файлы состояния приложений. Например, PID-файлы или UNIX-сокеты;
/sbin — аналогично /bin содержит бинарные файлы. Утилиты нужны для настройки и администрирования системы суперпользователем;
/srv — содержит файлы сервисов, предоставляемых сервером (прим. FTP или Apache HTTP);
/sys — содержит данные непосредственно о системе. Тут можно узнать информацию о ядре, драйверах и устройствах;
/tmp — содержит временные файлы. Данные файлы доступны всем пользователям на чтение и запись. Стоит отметить, что данный каталог очищается при перезагрузке;
/usr — содержит пользовательские приложения и утилиты второго уровня,
используемые пользователями, а не системой. Содержимое доступно только для чтения (кроме root). Каталог имеет вторичную иерархию и похож на корневой;
/var — содержит переменные файлы. Имеет подкаталоги, отвечающие за отдельные переменные. Например, логи будут храниться в /var/log, кэш в /var/cache, очереди заданий в /var/spool/ и так далее.
```
3)
Команда mount то есть монтирование тома (монтирование дисков).
4)
Отсутствие синхронизации между образом файловой системы в памяти и ее данными на диске в случае аварийного останова может привести к появлению следующих ошибок:
- Один блок адресуется несколькими mode (принадлежит нескольким файлам).
- Блок помечен как свободный, но в то же время занят (на него ссылается onode).
- Блок помечен как занятый, но в то же время свободен (ни один inode на него не ссылается).
- Неправильное число ссылок в inode (недостаток или избыток ссылающихся записей в каталогах).
- Несовпадение между размером файла и суммарным размером адресуемых inode блоков.
- Недопустимые адресуемые блоки (например, расположенные за пределами файловой системы).
- "Потерянные" файлы (правильные inode, на которые не ссылаются записи каталогов).
- Недопустимые или неразмещенные номера inode в записях каталогов.

5)
mkfs - позволяет создать файловую систему Linux, семейства ext: "sudo mkfs -t тип устройство".

6)
- cat <имя_файла> - Это самая простая и, пожалуй, самая популярная команда для просмотра файла в Linux. Cat просто печатает содержимое файла на стандартном экране,т.е. на экране. В основном используется для небольших файлов.
- Less <имя_файла>. Команда Less просматривает файл по одной странице за раз.
- Head <имя_файла>. Команда Head — это еще один способ просмотра текстового файла, но с небольшой разницей. Команда head отображает первые 10 строк текстового файла по умолчанию. Вы можете изменить это поведение, используя опции с командой head, но основной принцип остается тем же: команда head начинает работать с заголовка (начала) файла.
- Tail <имя_файла>. Команда Tail в Linux аналогична и все же противоположна команде head. В то время как команда head отображает файл с начала, команда tail отображает файл с конца. По умолчанию команда tail отображает последние 10 строк файла. Команды Head и Tail могут быть объединены для отображения выбранных строк из файла. Вы также можете использовать команду tail для просмотра изменений, внесенных в файл в режиме реального времени.

7)
Это сокращение от copy, и она делает именно то, что предполагает ее название: она копирует, также используется для копирования файлов из одного местоположения в другое,  используется для копирования всех каталогов в новое место или для копирования нескольких файлов и каталогов.

8)
Команда mv используется для перемещения файлов из одного каталога в другой. Также команда mv используется для переименования файла в системах Linux.

9)
Права доступа определяют, какие действия конкретный пользователь может или не может совершать с определенным файлами и каталогами. Каждый файл можно изменять по трём параметра доступа:
- Чтение - разрешает получать содержимое файла. Для каталога позволяет получить список файлов и каталогов, расположенных в нем;
- Запись - разрешает записывать новые данные в файл или изменять существующие, а также позволяет создавать и изменять файлы и каталоги;
- Выполнение - разрешает запускать программу, если у нее есть флаг выполнения. Этот атрибут устанавливается для всех программ и скриптов, именно с помощью него система может понять, что этот файл является запускаемым.
Для изменение этих данных (разделённых на 3 типа пользователей u - user, g - group, o - others) используется команда chmod.
