1)
Вхожу в систему через учётку max: 335728m

2)
touch file.txt; ls /etc > file.txt; cat file.txt
ls >> file.txt; tail file.txt

3)
grep .conf file.txt
cat file.txt | grep ".conf" > conf.txt
head conf.txt

4)
find ~ -name "c*" -print
ls ~ | grep c*

5)
sudo find /etc -name "h*" -print

6)
find /etc -name "log*" -print > ~/logfile.txt &

7)
rm ~/logfile.txt

8)
gedit &

9)
ps aux | grep "gedit"
pidof gedit
ps -fC gedit

10)
man kill
jobs; kill <gedit-id>

11)
man df
man du
df -vi
df -cat
du -a file.txt

12)
man find
find ~ -type d

ВОПРОСЫ:
1)
– stdin - стандартный поток ввода (по умолчанию: клавиатура), файловый дескриптор 0;
– stdout - стандартный поток вывода (по умолчанию: консоль), файловый дескриптор 1;
– stderr - стандартный поток вывод сообщений об ошибках (по умолчанию: консоль), файловый дескриптор 2.

2)
>filename - Перенаправление вывода (stdout) в файл “filename”.
>>filename - Перенаправление вывода (stdout) в файл “filename”, файл открывается в режиме добавления.

3)
Конвейер (pipe) служит для объединения простых команд или утилит в цепочки,
в которых результат работы предыдущей команды передаётся последующей. (команда1 | команда2)

4)
Компьютерная программа сама по себе — лишь пассивная последовательность инструкций. В то время как процесс — непосредственное выполнение этих инструкций.

5)
Идентификатор процесса (PID). Каждому новому процессу ядро присваивает уникальный идентификационный номер. В любой момент времени идентификатор процесса является уникальным, хотя после завершения процесса он может использоваться снова для другого процесса. Некоторые идентификаторы зарезервированы системой для особых процессов. Так, процесс с идентификатором 1 - это процесс инициализации init, являющийся предком всех других процессов в системе.
Идентификатор группы GID и эффективный идентификатор группы (EGID) GID - это идентификационный номер группы данного процесса. EGID связан с GID также, как EUID с UID.

6)
Задачи - это то, что мы подаем на выполнение системе, какой-то процесс, который она начинает выполнять, чтобы проследить за ними можно использовать Команду "jobs".

7)
top (table of processes) — консольная команда, которая выводит список работающих в системе процессов и информацию о них. По умолчанию она в реальном времени сортирует их по нагрузке на процессор. Программа написана для UNIXсовместимых операционных систем и опубликована под свободной лицензией GNU FDL.
htop — продвинутый монитор процессов, написанный для Linux. Он был задуман заменить стандартную программу top. Htop показывает динамический список системных процессов, список обычно выравнивается по использованию ЦПУ. В отличие от top, htop показывает все процессы в системе. Также показывает время непрерывной работы, использование процессоров и памяти. Htop часто применяется в тех случаях, когда информации даваемой утилитой top недостаточно, например при поиске утечек памяти в процессах. Htop написан на языке Си и использует для отображения библиотеку Ncurses.

8)
Команда find используется для поиска и отображения на экран имён файлов, соответствующих заданной строке символов. Формат команды: "find <путь> <-опции>",пример: "find /etc -name "p*" -print".

9)
Для поиска файла по содержимому проще всего воспользоваться командой "grep", пример: "grep -r строка_поиска каталог".

10)
При помощи команды df (аббревиатура от disk free) — утилита в UNIX и UNIX-подобных системах, показывает список всех файловых систем по именам устройств, сообщает их размер, занятое и свободное пространство и точки монтирования.

11)
Для этого есть команда "du -a ~".

12)
Для завершения процесса нужно вызвать утилиту kill с параметром "-9" или с параметром "ping".